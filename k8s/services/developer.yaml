---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gamevault-developer
  namespace: gamevault
  labels:
    app: gamevault-developer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gamevault-developer
  template:
    metadata:
      labels:
        app: gamevault-developer
    spec:
      containers:
      - name: developer
        image: ${DOCKER_REGISTRY}/gamevault-developer:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 8084
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://postgres:5432/gamevault_developer"
        - name: SPRING_DATASOURCE_USERNAME
          value: "gamevault_user"
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR
          value: "nacos:8848"
        - name: SPRING_CLOUD_NACOS_DISCOVERY_NAMESPACE
          value: "prod"
        - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI
          value: "http://gamevault-auth:8081/.well-known/jwks.json"
#        resources:
#          requests:
#            memory: "512Mi"
#            cpu: "250m"
#          limits:
#            memory: "1Gi"
#            cpu: "500m"
#        livenessProbe:
#          httpGet:
#            path: /actuator/health
#            port: 8084
#          initialDelaySeconds: 60
#          periodSeconds: 10
#        readinessProbe:
#          httpGet:
#            path: /actuator/health
#            port: 8084
#          initialDelaySeconds: 30
#          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: gamevault-developer
  namespace: gamevault
spec:
  type: ClusterIP
  ports:
  - port: 8084
    targetPort: 8084
  selector:
    app: gamevault-developer
