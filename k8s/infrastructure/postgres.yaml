---
# PostgreSQL PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: gamevault
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-path  # K3s default storage class

---
# PostgreSQL ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: gamevault
data:
  POSTGRES_DB: gamevault_auth
  POSTGRES_USER: gamevault_user
  TZ: Asia/Singapore

---
# PostgreSQL Secret
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: gamevault
type: Opaque
stringData:
  POSTGRES_PASSWORD: gamevault_pass  # Change this in production!

---
# PostgreSQL Init Script ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-script
  namespace: gamevault
data:
  01-init-databases.sql: |
    -- Create all required databases for GameVault microservices
    CREATE DATABASE gamevault_social;
    CREATE DATABASE gamevault_forum;
    CREATE DATABASE gamevault_developer;
    CREATE DATABASE gamevault_shopping;

    -- Grant privileges to gamevault_user
    GRANT ALL PRIVILEGES ON DATABASE gamevault_auth TO gamevault_user;
    GRANT ALL PRIVILEGES ON DATABASE gamevault_social TO gamevault_user;
    GRANT ALL PRIVILEGES ON DATABASE gamevault_forum TO gamevault_user;
    GRANT ALL PRIVILEGES ON DATABASE gamevault_developer TO gamevault_user;
    GRANT ALL PRIVILEGES ON DATABASE gamevault_shopping TO gamevault_user;

---
# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: gamevault
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:16
        ports:
        - containerPort: 5432
          name: postgres
        envFrom:
        - configMapRef:
            name: postgres-config
        - secretRef:
            name: postgres-secret
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - gamevault_user
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - gamevault_user
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: init-scripts
        configMap:
          name: postgres-init-script

---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: gamevault
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app: postgres
