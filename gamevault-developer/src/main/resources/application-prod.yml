server:
  port: 8084
  # 生产环境服务器配置
  tomcat:
    threads:
      max: 200
      min-spare: 10
    connection-timeout: 20000
    accept-count: 100
    max-swallow-size: 1000MB
    max-http-form-post-size: 1000MB

spring:
  application:
    name: gamevault-developer

  cloud:
    compatibility-verifier:
      enabled: false
    nacos:
      discovery:
        server-addr: nacos:8848
        namespace: prod
        group: GAMEVAULT_GROUP
        ip: ${POD_IP:developer}
        register-enabled: true
        heart-beat-interval: 5000
        heart-beat-timeout: 15000
      config:
        enabled: false
        import-check:
          enabled: false

  # OAuth2 资源服务器 - JWT 验证
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://auth:8081/.well-known/jwks.json

  # 数据源配置 - Docker Compose 环境
  datasource:
    url: jdbc:postgresql://postgres:5432/gamevault_developer
    username: gamevault_user
    password: gamevault_pass
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-test-query: SELECT 1

  # 文件上传配置 - 支持大文件（游戏资源）
  servlet:
    multipart:
      max-file-size: 1000MB
      max-request-size: 1000MB
      enabled: true
      file-size-threshold: 10MB
      location: /uploads

  # Redis 配置 - Docker Compose 环境
  data:
    redis:
      host: redis
      port: 6379
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 2
          max-wait: -1ms

# MyBatis 配置
mybatis:
  mapper-locations: classpath:mapper/**/*.xml
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl  # 生产环境使用 slf4j
    cache-enabled: true  # 启用二级缓存
    lazy-loading-enabled: true
    aggressive-lazy-loading: false

# 应用配置
app:
  # 资源基础 URL - 使用环境变量（docker-compose 已配置）
  asset-base-url: ${ASSET_BASE_URL:http://localhost:8084}
  # 游戏资源存储路径
  asset-storage-path: /app/game-assets
  upload:
    path: /uploads
    max-file-size: 1000MB
    max-request-size: 1000MB
  pagination:
    default-page-size: 20
    max-page-size: 100

# Actuator 配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# 日志配置
logging:
  level:
    root: INFO
    com.sg.nusiss: INFO
    com.sg.nusiss.developer: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    # MyBatis SQL 日志
    org.apache.ibatis: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /app/logs/developer-service.log
    max-size: 100MB
    max-history: 30
    total-size-cap: 1GB