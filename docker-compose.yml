services:
  postgres:
    image: postgres:16
    container_name: gamevault_postgres_cloud
    ports:
      - "12000:5432"
    environment:
      - TZ=Asia/Singapore
      - POSTGRES_DB=gamevault_auth
      - POSTGRES_USER=gamevault_user
      - POSTGRES_PASSWORD=gamevault_pass
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    networks:
      - gamevault

  nacos:
    image: nacos/nacos-server:v2.1.1
    container_name: gamevault_nacos_cloud
    platform: linux/amd64
    ports:
      - "8848:8848"
      - "9848:9848"
    environment:
      - MODE=standalone
      - PREFER_HOST_MODE=hostname
      - SPRING_DATASOURCE_PLATFORM=embedded
      - TZ=Asia/Singapore
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8848/nacos/actuator/health" ]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s

    volumes:
      - ./docker/nacos/logs:/home/nacos/logs
      - ./docker/nacos/data:/home/nacos/data
    restart: unless-stopped
    networks:
      - gamevault

  # === Redis ===
  redis:
    image: redis:alpine
    container_name: gamevault_redis_cloud
    ports:
      - "12003:6379"
    volumes:
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./docker/redis/data/:/data
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: always
    networks:
      - gamevault

  # === Minio ===
  minio:
    image: minio/minio:latest
    container_name: gamevault_minio_cloud
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      TZ: Asia/Singapore
    volumes:
      - ./docker/minio/data:/data
      - ./docker/minio/config:/root/.minio
    command: server /data --console-address ":9001"
    privileged: true
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped
    networks:
      - gamevault

  # === MinIO 自动初始化 ===
  minio-init:
    image: minio/mc:latest
    container_name: gamevault_minio_init_cloud
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for MinIO...';
      sleep 5;
      mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      mc mb --ignore-existing myminio/gamevault-images;
      mc mb --ignore-existing myminio/gamevault-videos;
      mc mb --ignore-existing myminio/gamevault-files;
      mc mb --ignore-existing myminio/gamevault-audios;
      mc mb --ignore-existing myminio/gamevault-chat;
      mc anonymous set download myminio/gamevault-images;
      mc anonymous set download myminio/gamevault-videos;
      mc anonymous set download myminio/gamevault-files;
      mc anonymous set download myminio/gamevault-audios;
      mc anonymous set download myminio/gamevault-chat;
      echo 'MinIO buckets created!';
      mc ls myminio;
      exit 0;
      "
    networks:
      - gamevault

  # ==================== 微服务 ====================

  # Gateway 网关服务
  gateway:
    image: ${DOCKERHUB_USERNAME}/gamevault-gateway:${IMAGE_TAG:-latest}
    container_name: gamevault_gateway_cloud
    depends_on:
      nacos:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR=nacos:8848
      - SPRING_CLOUD_NACOS_DISCOVERY_NAMESPACE=prod
      - SPRING_CLOUD_NACOS_DISCOVERY_GROUP=DEFAULT_GROUP


    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - gamevault

  # Auth 认证服务
  auth:
    image: ${DOCKERHUB_USERNAME}/gamevault-auth:${IMAGE_TAG:-latest}
    container_name: gamevault_auth_cloud
    depends_on:
      - postgres
      - nacos
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/gamevault_auth
      - SPRING_DATASOURCE_USERNAME=gamevault_user
      - SPRING_DATASOURCE_PASSWORD=gamevault_pass
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR=nacos:8848
      - SPRING_CLOUD_NACOS_DISCOVERY_NAMESPACE=prod
      - SPRING_CLOUD_NACOS_DISCOVERY_GROUP=DEFAULT_GROUP
    ports:
      - "8081:8081"
    volumes:
      - ./docker/uploads:/uploads
    restart: unless-stopped
    networks:
      - gamevault

  # Shopping 商城服务
  shopping:
    image: ${DOCKERHUB_USERNAME}/gamevault-shopping:${IMAGE_TAG:-latest}
    container_name: gamevault_shopping_cloud
    depends_on:
      - postgres
      - nacos
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/gamevault_shopping
      - SPRING_DATASOURCE_USERNAME=gamevault_user
      - SPRING_DATASOURCE_PASSWORD=gamevault_pass
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR=nacos:8848
      - SPRING_CLOUD_NACOS_DISCOVERY_NAMESPACE=prod
      - SPRING_CLOUD_NACOS_DISCOVERY_GROUP=DEFAULT_GROUP

    ports:
      - "8082:8082"
    restart: unless-stopped
    networks:
      - gamevault

  # Forum 论坛服务
  forum:
    image: ${DOCKERHUB_USERNAME}/gamevault-forum:${IMAGE_TAG:-latest}
    container_name: gamevault_forum_cloud
    depends_on:
      - postgres
      - nacos
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/gamevault_forum
      - SPRING_DATASOURCE_USERNAME=gamevault_user
      - SPRING_DATASOURCE_PASSWORD=gamevault_pass
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR=nacos:8848
      - SPRING_CLOUD_NACOS_DISCOVERY_NAMESPACE=prod
      - SPRING_CLOUD_NACOS_DISCOVERY_GROUP=DEFAULT_GROUP

    ports:
      - "8083:8083"
    restart: unless-stopped
    networks:
      - gamevault

  # Developer 开发者服务
  developer:
    image: ${DOCKERHUB_USERNAME}/gamevault-developer:${IMAGE_TAG:-latest}
    container_name: gamevault_developer_cloud
    depends_on:
      - postgres
      - redis
      - nacos
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/gamevault_developer
      - SPRING_DATASOURCE_USERNAME=gamevault_user
      - SPRING_DATASOURCE_PASSWORD=gamevault_pass
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR=nacos:8848
      - SPRING_CLOUD_NACOS_DISCOVERY_NAMESPACE=prod
      - ASSET_BASE_URL=http://${EC2_PUBLIC_IP:-localhost}:8084
      - SPRING_CLOUD_NACOS_DISCOVERY_GROUP=DEFAULT_GROUP

    ports:
      - "8084:8084"
    restart: unless-stopped
    networks:
      - gamevault

  # Social 社交服务
  social:
    image: ${DOCKERHUB_USERNAME}/gamevault-social:${IMAGE_TAG:-latest}
    container_name: gamevault_social_cloud
    depends_on:
      - postgres
      - redis
      - minio
      - nacos
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/gamevault_social
      - SPRING_DATASOURCE_USERNAME=gamevault_user
      - SPRING_DATASOURCE_PASSWORD=gamevault_pass
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR=nacos:8848
      - SPRING_CLOUD_NACOS_DISCOVERY_NAMESPACE=prod
      - MINIO_PUBLIC_ENDPOINT=http://${EC2_PUBLIC_IP:-localhost}:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - SPRING_CLOUD_NACOS_DISCOVERY_GROUP=DEFAULT_GROUP

    ports:
      - "8089:8089"
    restart: unless-stopped
    networks:
      - gamevault


networks:
  gamevault:
    driver: bridge