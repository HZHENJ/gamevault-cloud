# ==========================================
# CI Workflow - Build, Test, and Package
# For GameVault Cloud Microservices
# ==========================================


name: "CI - Build and Test"

on:
  push:
    branches: [prod/master, master, main]
  pull_request:
    branches: [prod/master, master, main]

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: Build, Test & Package

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: gamevault_test
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: 'maven'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Install dependencies
        run: mvn dependency:go-offline -B

      - name: Build with Maven
        run: |
          echo "Cleaning previous build artifacts..."
          find . -name "target" -type d -exec rm -rf {} +
          mvn clean compile -B -Dmaven.compiler.parameters=true

      - name: Run Unit Tests
        run: mvn test -B
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/gamevault_test
          SPRING_DATASOURCE_USERNAME: test_user
          SPRING_DATASOURCE_PASSWORD: test_password
          SPRING_DATA_REDIS_HOST: localhost
          SPRING_DATA_REDIS_PORT: 6379

      - name: Generate Code Coverage Report
        run: mvn jacoco:report
        continue-on-error: true

      - name: Package Application
        run: mvn clean package -DskipTests -B -Dmaven.compiler.parameters=true

      - name: Generate Build Summary
        run: |
          echo "## Build Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Build completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Artifacts:" >> $GITHUB_STEP_SUMMARY

          for service in gamevault-auth gamevault-gateway gamevault-shopping gamevault-forum gamevault-developer gamevault-social; do
            JAR_FILE=$(find $service/target -name "*.jar" -not -name "*-sources.jar" | head -n 1)
            if [ -f "$JAR_FILE" ]; then
              JAR_SIZE=$(du -h "$JAR_FILE" | cut -f1)
              echo "- **$service**: $(basename $JAR_FILE) ($JAR_SIZE)" >> $GITHUB_STEP_SUMMARY
            fi
          done

      - name: Upload JAR Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: application-jars
          path: |
            gamevault-*/target/*.jar
            !gamevault-*/target/*-sources.jar
          retention-days: 7

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/target/surefire-reports/
            **/target/site/jacoco/
          retention-days: 30
